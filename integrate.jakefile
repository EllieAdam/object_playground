// Copyright (c) 2012 Titanium I.T. LLC. All rights reserved. See LICENSE.txt for details.
/*global desc, task, jake, fail, complete */

var build_command = require("./build/util/build_command.js");
var sh = require("./build/util/sh.js");

(function() {
	"use strict";

	task("default", ["promote"]);

	desc("Merge master branch into integration branch.");
	task("promote", ["status"], function() {
		checkoutAndBuild(afterSuccessfulBuild, afterFailedBuild);

		function checkoutAndBuild(successCallback, failureCallback) {
			sh.runMany([
				"git checkout master",
				build_command()
			], successCallback, failureCallback);
		}
		function afterSuccessfulBuild() {
			run([
				"git checkout integration",
				"git merge master --no-ff --log=500 -m INTEGRATE: --edit",
				"git checkout master"
			], complete);
		}
		function afterFailedBuild() {
			fail("Integration failed.");
		}
	});

	// Ensure there aren't any files that need to be checked in or ignored
	task("status", function() {
		run(["git status --porcelain"], function(stdout) {
			if (stdout[0]) fail("Working directory contains files to commit or ignore.");
			complete();
		});
	}, {async:true});

	function run(commands, callback, errorMessage) {
		errorMessage = errorMessage || "shell command exited with error code";
		sh.runMany(commands, callback, function() {
			fail(errorMessage);
		});
	}
}());